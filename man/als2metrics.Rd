% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/als2metrics.R
\name{als2metrics}
\alias{als2metrics}
\title{als2metrics: Extract metrics from an airborne LiDAR point cloud}
\usage{
als2metrics(
  pointcloud = NULL,
  first = TRUE,
  last = TRUE,
  intermediate = TRUE,
  all = TRUE,
  ecat_prop = TRUE,
  basic_stats = TRUE,
  quantiles = seq(0.05, 0.95, 0.05),
  densities = TRUE,
  densities_ft = c(0.5, 2, 5, 10, 15, 20),
  intensity_stats = TRUE,
  intensity_q = TRUE,
  cutoff = 0,
  min_echo_n = 10,
  output = NULL,
  verbose = TRUE
)
}
\arguments{
\item{pointcloud}{Specify an ALS file (text file), Format: plot_cell_id; x; y; z; dz, i; 
echotype; flightline; terraclass; GPS-time (delimeter: space). 
First seven columns must be in the abovementioned order, additional columns are optional.
Echo type codes: 0 = Only echo, 1 = First of many echo, 
2 = Intermediate echo, 3 = Last of many echo. String.}

\item{first}{Output metrics computed based on  first echoes (first + only)
(rows). It is recommended to use row and column names. Logical.}

\item{last}{Output metrics computed based on  last echoes (last + only). Logical.}

\item{intermediate}{Output metrics computed based on intermediate echoes (intermediate). Logical.}

\item{all}{Output metrics computed based on ALL echoes (first, last, only and intermediate). Logical.}

\item{ecat_prop}{Calculate mean and standard deviation of heights and the proportion of echoes categories. Logical.}

\item{basic_stats}{Calculates mean, std, med, min, max, skew, kurt.Skew and kurt computed using the functions of the *moments* package. Logical.}

\item{quantiles}{A vector of percentiles, e.g using seq(...) function. Percentiles are calculated using quantile() -function (using default type=7)}

\item{densities}{Calculates densities, i.e. echo proportion under or equal to the determined height value. Logical.}

\item{densities_ft}{The height values fixed height densities are computed. Vector.}

\item{intensity_stats}{Calculates mean_int, std_int, med_int, min_int, max_int, skew_int, kurt_int}

\item{intensity_q}{Calculate quantiles in the same manner as for dZ values ('quantiles' must be defined). Logical.}

\item{cutoff}{Cut off all echoes smaller or equal to the given threshold value. Numeric.}

\item{min_echo_n}{Minimum number of echoes to compute metrics. Numeric.}

\item{output}{A path of the output file, including file name as a .txt format. String.}
}
\value{
\code{als2metrics} Prints a .txt file to the user-defined path.
}
\description{
\code{als2metrics} is used to extract metrics from an airborne LiDAR point cloud
}
\examples{
als2metrics(pointcloud = "C:/Temp/lidar_data.txt",     # A Path of an airborne LiDAR data file
           first = TRUE,                        			 # Compute first echo metrics
           last = TRUE,                        			 # Compute last echo metrics
           intermediate = TRUE,                       # Compute intermediate echo metrics
           all = TRUE,                                # Compute all echo metrics
           ecat_prop = TRUE,                          # Compute proportions of echo categories
           basic_stats = TRUE,                        # Compute basic statistics
           quantiles = seq(0.05, 0.95, 0.05),         # Vector of percentiles
           densities = TRUE,                          # Compute densities
           densities_ft = c(0.5, 2, 5, 10, 15, 20),   # Vector of heights in fixed height densities
           intensity_stats = TRUE,                    # Compute intensity statistics
           intensity_q = TRUE,                        # Compute intensity percentiles
           cutoff = 0.0,                              # Cutoff threshold
           min_echo_n = 10,                           # Minimum number of echoes
           output = "lidar_metrics.txt"               # Output file 
)
}
